pipeline {
    agent any

    environment {
        DOCKER_USERNAME = 'devgixa'
        DOCKER_IMAGE_FRONTEND = 'devgixa/frontend-service'
        DOCKER_IMAGE_BACKEND = 'devgixa/backend-service'
        BUILD_TAG = "latest"
        NETWORK_NAME = 'app-network'
        BACKEND_PORT = '4040'
        SSH_USER = 'ec2-user' // Updated for Amazon Linux 2
        SSH_KEY = 'chatting.pem' // Updated to match the key in the command
        EC2_PUBLIC_IP = '3.86.206.251' // Your EC2 instance's public IP
    }

    stages {
        stage('SCM Checkout') {
            steps {
                retry(3) {
                    git branch: 'main', url: 'https://github.com/GiharaNavindu/talks-dev.git'
                }
            }
        }

        stage('Build and Push Docker Images') {
            steps {
                script {
                    bat "docker build -t ${DOCKER_IMAGE_FRONTEND}:${BUILD_TAG} ./client"
                    bat "docker build -t ${DOCKER_IMAGE_BACKEND}:${BUILD_TAG} ./api"
                }

                script {
                    withCredentials([string(credentialsId: 'Dockerpwd', variable: 'DOCKER_PASSWORD')]) {
                        bat "docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}"
                    }
                    bat "docker push ${DOCKER_IMAGE_FRONTEND}:${BUILD_TAG}"
                    bat "docker push ${DOCKER_IMAGE_BACKEND}:${BUILD_TAG}"
                }
            }
        }

        stage('Deploy on EC2 with Ansible') {
            steps {
                script {
                    echo "Deploying backend and frontend on EC2 using Ansible..."

                    // Copy the SSH key to the workspace if it's not already there
                    bat """
                        if not exist ${SSH_KEY} (
                            copy "C:\\path\\to\\chatting.pem" ${SSH_KEY}
                        )
                    """

                    // Run Ansible playbook using the cytopia/ansible image
                    bat """
                        docker run --rm -v %CD%:/ansible -w /ansible cytopia/ansible ansible-playbook -i ansible/inventory.ini ansible/deploy.yml --private-key chatting.pem
                    """
                }
            }
        }
    }

    post {
        always {
            bat 'docker logout'
            echo "Logged out from Docker Hub."
        }
    }
}
