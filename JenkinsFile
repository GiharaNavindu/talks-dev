pipeline {
    agent any

    environment {
        DOCKER_USERNAME = 'devgixa' 
        DOCKER_IMAGE_FRONTEND = 'devgixa/frontend-service'
        DOCKER_IMAGE_BACKEND = 'devgixa/backend-service'
        DOCKER_IMAGE_DATABASE = 'devgixa/mongo-service' // New Database Image
    }

    stages {
        stage('SCM Checkout') {
            steps {
                retry(3) {
                    git branch: 'main', url: 'https://github.com/GiharaNavindu/talks-dev.git'
                }
            }
        }

        stage('Build Frontend Image') {
            steps {
                script {
                    bat "docker build -t ${DOCKER_IMAGE_FRONTEND}:%BUILD_NUMBER% ./client"
                }
            }
        }

        stage('Build Backend Image') {
            steps {
                script {
                    bat "docker build -t ${DOCKER_IMAGE_BACKEND}:%BUILD_NUMBER% ./api"
                }
            }
        }
        
        stage('Build Database Image') { // New Stage for MongoDB Image
            steps {
                script {
                    bat "docker pull mongo:6.0"
                    bat "docker tag mongo:6.0 ${DOCKER_IMAGE_DATABASE}:%BUILD_NUMBER%"
                }
            }
        }

        stage('Login to Docker Hub') {
            steps {
                script {
                    echo "Attempting to log in to Docker Hub..."
                    withCredentials([string(credentialsId: 'Dockerpwd', variable: 'DOCKER_PASSWORD')]) {
                        try {
                            bat "docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}"
                            echo "Successfully logged in to Docker Hub."
                        } catch (Exception e) {
                            echo "Failed to log in to Docker Hub: ${e.message}"
                            error "Docker login failed."
                        }
                    }
                }
            }
        }

        stage('Push Images to Docker Hub') {
            steps {
                script {
                    bat "docker push ${DOCKER_IMAGE_FRONTEND}:%BUILD_NUMBER%"
                    bat "docker push ${DOCKER_IMAGE_BACKEND}:%BUILD_NUMBER%"
                    bat "docker push ${DOCKER_IMAGE_DATABASE}:%BUILD_NUMBER%" // Push Database Image
                }
            }
        }
    }

    post {
        always {
            bat 'docker logout'
            echo "Logged out from Docker Hub."
        }
    }
}
